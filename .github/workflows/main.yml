name: Deploy Spring Boot Application

on:
  push:
    branches:
      - feature  # feature 브랜치에 푸시될 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. JDK 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. Gradle 빌드 (Maven 사용 시 변경)
      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew clean build -x test

      # 4. 원격 서버에 JAR 파일 업로드 (SSH 방식)
      - name: Deploy to Server via SSH
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          source: "build/libs/*.jar"
          target: ${{ secrets.APP_DIRECTORY }}

      # 5. 원격 서버에서 기존 애플리케이션 중지 및 새로 실행
      - name: Restart Application
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          script: |
            cd ${{ secrets.APP_DIRECTORY }}
            pkill -f 'java -jar' || true  # 기존 애플리케이션 종료
            
            # RDS 환경 변수 설정
            export SPRING_DATASOURCE_URL="jdbc:mysql://${{ secrets.RDS_HOST }}:${{ secrets.RDS_PORT }}/${{ secrets.RDS_DATABASE }}?serverTimezone=Asia/Seoul"
            export SPRING_DATASOURCE_USERNAME="${{ secrets.RDS_USERNAME }}"
            export SPRING_DATASOURCE_PASSWORD="${{ secrets.RDS_PASSWORD }}"
            
            # JAR 실행
            nohup java -jar $(ls -t *.jar | head -n 1) > app.log 2>&1 &
